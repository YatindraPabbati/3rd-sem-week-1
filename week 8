
//polygon
#include <iostream>
using namespace std;
class polygon{
    protected:
int radius;
int length;
int breadth;
int side;
public:
virtual void getdata()=0;
virtual  void areaofcircle()=0;
virtual void areaofrect()=0;
virtual void areaofsquare()=0;

};
class firstarea:public polygon{
    public:
    void getdata(){
        cin>>radius;
        cin>>length;
        cin>>breadth;
        cin>>side;
    }
    void  areaofcircle(){
        float ans = 2*3.14*(radius*radius);
        cout<<"Printing area of circle "<<ans<<endl;
    }
     void  areaofrect(){
        float ans = length*breadth;
        cout<<"Printing area of rectangle "<<ans<<endl;
    }
     void  areaofsquare(){
        float ans =side*side;
        cout<<"Printing area of square "<<ans<<endl;
    }
};
int main(){
polygon *a;
firstarea f;
a = &f;
a->getdata();
a->areaofcircle();
a->areaofrect();
a->areaofsquare();
 return 0;}
 
 //area 

#include <iostream>
using namespace std;
class area{
    protected:
int radius;
int length;
int breadth;
int side;
public:
virtual void getdata();
virtual  void areaofcircle();
virtual void areaofrect();
virtual void areaofsquare();
};
class firstarea:public area{
    public:
    void getdata(){
        cin>>radius;
        cin>>length;
        cin>>breadth;
        cin>>side;
    }
    void  areaofcircle(){
        float ans = 2*3.14*(radius*radius);
        cout<<"Printing area of circle "<<ans<<endl;
    }
     void  areaofrect(){
        float ans = length*breadth;
        cout<<"Printing area of rectangle "<<ans<<endl;
    }
     void  areaofsquare(){
        float ans =side*side;
        cout<<"Printing area of square "<<ans<<endl;
    }
};
int main(){
 area *a;
firstarea f;
a = &f;
a->getdata();
a->areaofcircle();
a->areaofrect();
a->areaofsquare();
 return 0;}
 
 //sum
 #include <iostream>
using namespace std;
};
 class tem:public temp{
     public:
    void getdata(){
        cin>>a;
        cin>>b;
    }
    void print(){
        int sum = a+b;
        cout<<sum<<endl;
    }
};
int main(){
tem t;
t.getdata();
t.print();
return 0;}

//virtual function
 #include <iostream>
using namespace std;
class virt{
    protected:
int n;
int m;
public:
virtual void getdata()=0;
virtual void sum()=0;
};
class sum : public virt{
public:
void getdata(){
    cin>>n;
    cin>>m ;
}
void add(){
    int ans = n+m;
    cout<<ans<<endl;
}

};
int main()
{virt *baseclass;
sum abstr;
baseclass = &abstr;
baseclass->getdata();
baseclass->add();
return 0;}
