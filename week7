//Displaying all information of student
#include<iostream>
#include<cmath>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;
class student{
public:
int roll_no;
string name;
int age;
string dateofbirth;
};
class data : public student{
    public:
void getdata(){
    cin>>roll_no;
    cin>>name;
    cin>>age;
    cin>>dateofbirth;
}
void display(){
    cout<<roll_no<<endl;
    cout<<name<<endl;
    cout<<age<<endl;
    cout<<dateofbirth<<endl;
}
};
int main(){
data d;
d.getdata();
d.display()
return 0;}

//displaying employee data using multiple inheritence
#include<iostream>
#include<cmath>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;

class employee{
public:
int id_no;
string name;
int age;
string department;
};
class data :public employee{
public:
int salary ;
};
class temp: public data{
public:
int averagesalary;
void getdata(){
    cin>>id_no;
    cin>>name>>age>>department>>salary;
}
void display(){
    averagesalary  = (salary*12)/12;
    cout<<name<<endl;
    cout<<age<<" "<<department<<" "<<salary<<" "<<averagesalary<<" "<<endl;
}
};
int main(){
temp p;
p.getdata();
p.display();
return 0;}

//cube and square of number
#include<iostream>
#include<cmath>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;
class cube{
public:
int side;
};
class finding :public cube{
public:
void getdata(){
    cin>>side;
}
void display(){
    cout<<side*side*side<<endl;
}
};
class square:public cube{
    public:
    void getdata(){
        cin>>side;
    }
    
void display(){
    cout<<side*side<<endl;
}
};
int main(){finding f;
square s;
f.getdata();
f.display();
s.getdata();
s.display();
return 0;}



// employee details using hierarchical ineritence

#include<iostream>
#include<cmath>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;
class employee{
    public:
int salary;
int pf;
char  department[200];
};
class sal:public employee{
public:
void getdata(){
    cin>>salary;
}
int cal;
void display(){
    cal = 0.2*salary;
    cout<<cal<<endl;
}

};
class dep : public sal{
public:
void getdata(){
    // cin.getline(department,200);
    cin>>department;
}
void display(){
    cout<<department<<endl;
}
};
int main(){
sal s;
s.getdata();
s.display();
dep d;
d.getdata();
d.display();
return 0;}

// number of fruits in basket
#include<iostream>
#include<cmath>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;

class fruit{
protected:
int n;

};
class apple: protected fruit{
public:
void getdata(){
    cin>>n;
}
void display(){
int ans = 0.2*n;
cout<<"20 % of fruit in a basket is apple: "<<endl;
cout<<"The Number of Apple in Basket is :"<<ans<<endl;
}
};
class Mangoes:protected fruit{
public:
void getdata(){
    cin>>n;
}
void display(){
    cout<<"10 % of fruit is Mangoes :"<<endl;
    int ans = 0.1*n;
    cout<<"The Number of mangoes :"<<ans<<endl;
}
};
int main(){apple a;
Mangoes m;
a.getdata();
a.display();
m.getdata();
m.display();
return 0;}
